(define (cube-iter last this x)
		(
			if (good-enough? last this x)
			this
			(cube-iter this (improve this x) x)
		)
)

(define (improve guess x)
		(
			/ (+ (/ x (* guess guess)) (* guess 2)) 3
		)
)

(define (good-enough? last this x)
		(
			and 
			( < (/ (abs (- last this)) last) 0.00001 )
			(< (abs (- (* this this this) x)) 0.00001)
		)
)

(define (cube x)
		(
			cube-iter x 1.0 x
		)
)

(cube 1)
(cube 8)
(cube 27)
(cube -1)
(cube -8)
(cube -27)
(cube 0.000000000000000000000001)