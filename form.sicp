; form of define variable
;  (define variblae_name variable_value)
(define size 2)
size

; form of define procedure
;  (define (<name> <formal parameters>) (<body>))
(define (square x) (* x x))
(square 10)

; conditional expression
;  (cond (<p1> <e1>) (<p2> <e2>) ... (<pn> <en>)) : if p1 then e1 else if p2 then e2 ... else if pn then pn
(define x 10)
(cond
  ((> x 10) 11)
  ((< x 10) 9)
  ((= x 10) 10)
  )
;  (cond (<p1> <e1>)...(<pn> <en>) (else <e>)) : if p then e1 ... else if pn then en else e
(cond
  ((= x 9) 9)
  (else 10)
  )
;  (if <predicate> <consequent> <alternative>) : if predicate then consequent else alternative
(if (= x 11) 11 10)

; logical composition operations
;  (and <p1> <p2> ... <pn>)
;  (or  <p1> <p2> ... <pn>)
;  (not <p>)
(and false false true true false)
(or  false false true true false)
(not false)